/* The problem statement can be found at the below link.*/
/* https://cses.fi/problemset/task/1652/ */
#include <bits/stdc++.h>
using namespace std;

constexpr int MAX_SIDE = 1000;
int tree_pref[MAX_SIDE + 1][MAX_SIDE + 1];
int forest[MAX_SIDE + 1][MAX_SIDE + 1];

int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	int N;
	int Q;
	cin >> N >> Q;

    for (int i = 0; i <= N; i++) {
		for (int j = 0; j <= N; j++) {
			forest[i][j] = 0;
            tree_pref[i][j] = 0;
		}
	}
    
    for (int i = 1; i <= N; i++) {
		for (int j = 1; j <= N; j++) {
			char a;
			cin >> a;
			forest[i][j] += a == '*';
		}
	}

	for (int i = 1; i <= N; i++) {
		for (int j = 1; j <= N; j++) {
			tree_pref[i][j] = forest[i][j]
						+ tree_pref[i - 1][j]
						+ tree_pref[i][j - 1]
						- tree_pref[i - 1][j - 1];
		}
	}

	for (int q = 0; q < Q; q++) {
		int x1, x2, y1, y2;
		cin >> x1 >> y1 >> x2 >> y2;
		cout << tree_pref[x2][y2]
				- tree_pref[x1-1][y2]
				- tree_pref[x2][y1-1]
				+ tree_pref[x1-1][y1-1] << '\n';
	}
	return 0;
}
/* It is based on the formulas of 2d prefix sums.*/

