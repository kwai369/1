/* The problem statement can be found at the below link.*/
/* https://codeforces.com/edu/course/2/lesson/9/2/practice/contest/307093/problem/F */
#include <bits/stdc++.h>
#define ll long long
using namespace std;
 
struct stack{
	vector<ll> s,smin = {LLONG_MAX},smax = {LLONG_MIN};
	
	void push(ll x){
		s.push_back(x);
		smax.push_back(::max(smax.back(),x));
		smin.push_back(::min(smin.back(),x));
	}
	
	ll pop(){
		ll res = s.back();
		s.pop_back();
		smax.pop_back();
		smin.pop_back();
		return res;
	}
	
	bool empty(){
		return s.empty();
	}
	
	ll max(){
		return smax.back();
	}
	
	ll min(){
		return smin.back();
	}
};

::stack s1,s2;

void add(ll x){
	s2.push(x);
}

void remove(){
	if(s1.empty()){
		while(!s2.empty()){
			s1.push(s2.pop());
		}
	}
	s1.pop();
}

ll k;
bool good(){
	ll mn = min(s1.min(),s2.min());
	ll mx = max(s1.max(),s2.max());
	return mx-mn <= k;
}

int main(){
	int n;
	cin >> n >> k;
	ll a[n];
	for(int i=0;i<n;i++){
		cin >> a[i];
	}
	ll res=0;
	int left=0;
	for(int right=0;right<n;right++){
		add(a[right]);
		while(!good()){
			remove();
			left++;
		}
		res += right-left+1;
	}
	cout << res;
}

