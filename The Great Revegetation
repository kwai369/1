/* The problem statement can be found at the below link.*/
/* http://www.usaco.org/index.php?page=viewproblem2&cpid=916 */
/* The first solution satifies all testcases but the second solution does not satisfy all testcases.*/
/* Solution 1: */
#include<bits/stdc++.h>
using namespace std;
 
int main(void){
  freopen("revegetate.in","r",stdin);
  freopen("revegetate.out","w",stdout);
  int N, M;
  int A[151], B[151], G[101];
  cin >> N >> M;
  for (int i=0; i<M; i++) { 
    cin >> A[i] >> B[i];
    if (A[i] > B[i]) swap (A[i], B[i]);
  }  
  for (int i=1; i<=N; i++) {
    int g;
    for (g = 1; g <= 4; g++) {
      bool ok = true;
      for (int j=0; j<M; j++) 
	      if (B[j] == i && G[A[j]] == g) ok = false;
      if (ok) break;
    }
    G[i] = g;
    cout << g;
  }
  cout << "\n";
  return 0;
}
/* Solution 2: */
#include<bits/stdc++.h>
using namespace std;

int main(){
    freopen("revegetate.in","r",stdin);
	freopen("revegetate.out","w",stdout);
    int n,m;
    cin >> n >> m;
    vector<int> graph[n];
    for(int i=0;i<m;i++){
        int a,b;
        cin >> a >> b;
        a--;
        b--;
        graph[a].push_back(b);
        graph[b].push_back(a);
    }
    vector<int> ans(n,1);
    for(int i=0;i<n;i++){
		for(auto u:graph[i]){
			if(ans[i]==ans[u]){
				ans[u]++;
			}
		}
	}
    for(int i=0;i<n;i++){
		cout << ans[i];
	}
	return 0;
}


