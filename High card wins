/* The problem statement can be found at the below link.*/
/* http://www.usaco.org/index.php?page=viewproblem2&cpid=571 */
/* There are two solutions to this problem the first one is less effeceint than the second one.*/
/* First solution:-*/
#include <bits/stdc++.h>
using namespace std;

int main(){
	freopen("highcard.in","r",stdin);
	freopen("highcard.out","w",stdout);
	int n;
	cin >> n;
	set<int> s;
	for(int i=1;i<=2*n;i++){
		s.insert(i);
	}  
	vector<int> vec(n);
	for(int i=0;i<n;i++){
		cin >> vec[i];
		s.erase(vec[i]);
	}
	int ans=0;
	for(int i=0;i<n;i++){
		auto a = s.upper_bound(vec[i]);
		if(a!=s.end()){
			s.erase(*a);
			ans++;
		}
	}
	cout << ans;
}
/* Second solution:-*/
#include <bits/stdc++.h>
using namespace std;

const int MAXN = 1e5;
vector<bool> eh(MAXN+1);

int main(){
	freopen("highcard.in","r",stdin);
	freopen("highcard.out","w",stdout);
	int n;
	cin >> n;
	for(int i=0;i<n;i++){
		int c;
		cin >> c;
		eh[c] = true;
	}	
	vector<int> e,b;
	for(int i=1;i<=2*n;i++){
		if(eh[i]){
			e.push_back(i);
		}
		else{
			b.push_back(i);
		}
	}
	int p = 0,bi = 0,ei=0;
	while(bi < n && ei < n){
		if(b[bi] > e[ei]){
			p++,bi++,ei++;
		}
		else{
			bi++;
		}
	}
	cout << p;
}
	

