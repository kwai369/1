/* The problem statement can be found at the below link.*/
/* https://cses.fi/problemset/task/1632/ */
/* We two implementations of the same approach but the first implementation is slightly incorrect and it fails on four testcases out 12 testcases,but the second imlpementation is the correct implementation of the approach.*/
/* First implementation(incorrect implementation);- */
#include <bits/stdc++.h>
#define ll long long 
using namespace std;
 
int main(){
	int n,k;
	cin >> n >> k;
	vector<pair<int,int>> vec(n);
	for(int i=0;i<n;i++){
		cin >> vec[i].second >> vec[i].first;
	}
	sort(vec.begin(),vec.end());
	int ans=0;
	priority_queue<int,vector<int>,greater<int>> p;
	for(int i=0;i<k;i++){
		p.push(0);
	}
	for(int i=0;i<n;i++){
		if(vec[i].second >= p.top()){
			ans++,p.pop(),p.push(vec[i].first);
		}
	}
	cout << ans;
}
/* Second implementation(correct implementation):-*/
#include <bits/stdc++.h>
#define ll long long 
using namespace std;

int main(){
	int n,k;
	cin >> n >> k;
	vector<pair<int,int>> vec(n);
	for(int i=0;i<n;i++){
		cin >> vec[i].second >> vec[i].first;
	}
	sort(vec.begin(),vec.end());
	int ans=0;
	multiset<int> m;
	for(int i=0;i<k;i++){
		m.insert(0);
	}
	for(int i=0;i<n;i++){
		auto it = m.upper_bound(vec[i].second);
		if(it==begin(m)){
			continue;
		}
		ans++;
		m.erase(--it);
		m.insert(vec[i].first);
	}
	cout << ans;
}

