/* The problem statement can be found at the below link. */
/* http://www.usaco.org/index.php?page=viewproblem2&cpid=918 */
/* This is a partial solution. */
#include <bits/stdc++.h>
using namespace std;
 
int solve_min(int A[],int N){
  if(A[N-2]-A[0] == N-2 && A[N-1]-A[N-2]>2){ 
		return 2;
  }
  if(A[N-1]-A[1] == N-2 && A[1]-A[0]>2){
	    return 2;
  }
  int i, j=0, best=0;
  for(i=0; i<N; i++){
    while(j<N-1 && A[j+1]-A[i]<=N-1){ 
		j++;
    }
    best = max(best, j-i+1);
  }
  return N-best;
}
 
int main(void){
  freopen("herding.in","r",stdin);
  freopen("herding.out","w",stdout);
  int N;
  cin >> N; 
  int A[N];
  for(int i=0; i<N; i++){
	   cin >> A[i];
	}
  sort(A,A+N);
  int answer_min = solve_min(A,N);
  int answer_max = max(A[N-2]-A[0], A[N-1]-A[1]) - (N-2);
  cout << answer_min << "\n" << answer_max << "\n";
  return 0;
}

