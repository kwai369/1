/* The problem statement can be found at the below link.*/
/* https://codeforces.com/contest/632/problem/C */
/* The logic of this comparator is based of the greedy methodology that by concatenating two strings optimally we can get all the n strings concatenate optimally. Means by selecting local optimal we get 
global optimal.*/

#include<bits/stdc++.h>
using namespace std;
     
bool cmp(const string& a,const string& b){
   return a+b < b+a;
}
     
int main(){
   int n;
   cin >> n;
   vector<string> vec;
   for(int i=0;i<n;i++){
    	string s;
    	cin >> s;
    	vec.push_back(s);
    }
    sort(vec.begin(),vec.end(),cmp);
    string ans = accumulate(vec.begin(),vec.end(),string());
    cout << ans;
}
