/* The problem statement can be found at the below link. */
/* http://www.usaco.org/index.php?page=viewproblem2&cpid=593 */
/* This is a partial solution. */
#include <bits/stdc++.h>
using namespace std;
 
int main(){
	freopen("mowing.in","r",stdin);
	freopen("mowing.out","w",stdout);
	vector<vector<int>> last_time(2001,vector<int> (2001,-1));
    int n;
    cin >> n;
    int curx = 1000,cury = 1000;
    last_time[curx][cury] = 0;
    int currenttime = 0,answer = 1001;
    for(int i=0;i<n;i++){
		char c;
		int aux;
		cin >> c >> aux;
		int dirx = 0;
		int diry = 0;
		if(c == 'N'){
			dirx = -1;
		}
		else if(c == 'S'){
			dirx = 1;
		}
		else if(c == 'W'){
			diry = -1;
		}
		else{
			diry = 1;
		}
		for(int j=1;j<=aux;j++){
			curx += dirx;
			cury += diry;
			currenttime++;
			if(last_time[curx][cury]>=0 && currenttime - last_time[curx][cury] < answer){
				answer = currenttime - last_time[curx][cury];
			}
			last_time[curx][cury] = currenttime;
		}
	}
	if(answer==1001){
		answer = -1;
	}
	cout << answer;
	return 0;
}
